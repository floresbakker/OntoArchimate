prefix archimate: <https://data.rijksfinancien.nl/archimate/model/def/>
prefix dcm: <http://purl.org/dc/dcmitype/>
prefix dct: <http://purl.org/dc/terms/>
prefix dom: <https://data.rijksfinancien.nl/dom/model/def/>
prefix documentType: <https://data.rijksfinancien.nl/dom/model/id/documentType/>
prefix foaf: <http://xmlns.com/foaf/0.1/>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix respec: <https://respec.org/model/>
prefix section: <https://data.rijksfinancien.nl/svg/id/section/>
prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix standard: <https://data.rijksfinancien.nl/svg/id/standard/>
prefix status: <http://purl.org/adms/status/>
prefix vann: <http://purl.org/vocab/vann/>
prefix void: <http://rdfs.org/ns/void#>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
prefix xml: <http://www.w3.org/XML/1998/namespace#>



archimate:
    a
      owl:Ontology,
      respec:Ontology,
      void:Dataset;
    dct:conformsTo 'https://www.w3.org/TR/SVG11/'^^xsd:anyURI;
    dct:created '2024-02-14'^^xsd:date;
    dct:creator
      'Flores Bakker';
    respec:introduction '''
The Archimate ontology is designed to represent the vocabulary and logic of Archimate in RDF format. Archimate, a widely used modeling language for enterprise architecture, encompasses a rich set of concepts and relationships to describe the structure and behavior of organizations. By formalizing Archimate concepts into an ontology, we enable interoperability, integration, and semantic understanding of Archimate models within the context of the Semantic Web.

With this ontology, users can leverage semantic web technologies to generate, parse, validate, annotate, and reuse Archimate documents. By providing a standardized representation, it becomes feasible to integrate Archimate models with other data sources, perform automated reasoning, and develop advanced analysis and visualization tools.

'''@en;

    respec:objective '''
The primary objective of the Archimate ontology is to provide a standardized representation of Archimate concepts and relationships in RDF format. By formalizing the vocabulary and logic of Archimate, this ontology aims to facilitate interoperability, integration, and semantic understanding of Archimate models within the context of the Semantic Web.

Key objectives include enabling the generation, parsing, validation, annotation, and reuse of Archimate documents using semantic web technologies. Additionally, the ontology seeks to support automated reasoning, advanced analysis, and visualization of Archimate models, thereby enhancing decision-making processes in enterprise architecture.
'''@en;

    respec:audience '''
The target audience for the Archimate ontology includes architects, researchers, practitioners, tool developers, and enthusiasts working in the fields of enterprise architecture, semantic web technologies, ontology engineering, and related disciplines. 

This ontology caters to individuals and organizations involved in modeling, analyzing, and managing complex systems and architectures. Whether seeking to enhance interoperability between Archimate models and other data sources, develop semantic web-based tools for Archimate manipulation, or explore advanced analysis techniques, this ontology serves as a valuable resource for a diverse range of stakeholders.
'''@en;

    respec:background '''
The Archimate ontology emerges from the need to bridge the gap between the Archimate modeling language and semantic web technologies. While Archimate provides a comprehensive framework for describing enterprise architectures, its representation lacks the formal semantics necessary for automated processing, integration, and reasoning.

By creating an ontology that captures the essence of Archimate concepts and relationships in RDF, we aim to unlock new opportunities for leveraging Archimate models within the semantic web ecosystem. 
'''@en;

    dct:description '''
The Archimate ontology serves as a formal representation of Archimate terms and logic in RDF format. It enables the generation, parsing, validation, annotation, and reuse of Archimate documents using semantic web technologies.

This ontology encapsulates the richness of Archimate concepts and relationships, facilitating interoperability, integration, and semantic understanding of Archimate models within the context of the Semantic Web. By providing a standardized representation, it becomes feasible to integrate Archimate models with other data sources, perform automated reasoning, and develop advanced analysis and visualization tools.

This description elaborates on the purpose, scope, and capabilities of the Archimate ontology, underscoring its significance in enhancing the manipulation and interpretation of Archimate models within the realm of semantic web technologies.
'''@en;

    dct:abstract '''
The Archimate ontology is developed to represent Archimate terms and logic in RDF format, enabling the generation, parsing, validation, annotation, and reuse of Archimate documents using semantic web technologies.

This ontology serves as a standardized representation of Archimate concepts and relationships, fostering interoperability, integration, and semantic understanding of Archimate models within the context of the Semantic Web. By formalizing Archimate vocabulary into an ontology, it becomes feasible to integrate Archimate models with other data sources, perform automated reasoning, and develop advanced analysis and visualization tools.

This abstract provides a concise overview of the Archimate ontology, outlining its purpose, capabilities, and relevance in the context of enterprise architecture and semantic web technologies.
'''@en;

    skos:example """

An example of an Archimate model:



This can be represented in RDF using the Archimate vocabulary as follows:


""";
    dct:language 'iso639-1:en';
    dct:license 'https://creativecommons.org/licenses/by/4.0/'^^xsd:anyURI;
    dct:publisher <https://www.example.com>;
    dct:status status:UnderDevelopment;
    dct:title 'Archimate Core Vocabulary'@en;
    dct:source <https://www.example.com/archimate-vocabulary>;
    foaf:homepage 'https://www.example.com/'^^xsd:anyURI;
    owl:versionInfo '1.0';
    vann:preferredNamespacePrefix 'archimate';
    vann:preferredNamespaceUri 'https://data.rijksfinancien.nl/archimate/model/def/';
    void:uriRegexPattern '^https://data.rijksfinancien.nl/archimate/model/def/';
    void:uriSpace 'https://data.rijksfinancien.nl/xml/archimate/def/'^^xsd:anyURI.

  standard:archimate
    a dct:Standard;
    dct:created '2023-10-29'^^xsd:date;
    dct:source 'http://www.opengroup.org/xsd/archimate/3.0/'^^xsd:anyURI;
    skos:prefLabel 'The ArchiMateÂ® Enterprise Architecture Modeling Language'@en.

### Classes

### Generic DOM structure of an Archimate document

archimate:DomElement
    a owl:Class;
    rdfs:subClassOf dom:Element;
    dct:conformsTo <https://www.w3.org/TR/SVG11/text.html#TextElement>;
    skos:definition 'An element with namespace URI <> as defined in the Archimate specification, that is used to create and manipulate Archimate content.'@en;
    skos:prefLabel "The Archimate DOM element"@en;
    rdfs:isDefinedBy archimate:.

archimate:TextElement
    a owl:Class;
    rdfs:subClassOf dom:Element;
    dct:conformsTo <https://www.w3.org/TR/SVG11/text.html#TextElement>;
    skos:definition "A plain text element in an Archimate document."@en;
    skos:prefLabel "The Archimate DOM text element"@en;
    rdfs:isDefinedBy archimate:.

### Archimate elements

  archimate:Model
    a owl:Class;
    xml:tag 'model';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The <xml> xml element represents the root (top-level element) of an xml document, so it is also referred to as the root element. All other elements must be descendants of this element.'@en;
    skos:prefLabel 'the model element'@en;
    rdfs:isDefinedBy archimate:.
  
  archimate:Child
    a owl:Class;
    xml:tag 'child';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The child element'@en;
    skos:prefLabel 'the child element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:Bounds
    a owl:Class;
    xml:tag 'bounds';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The bounds element'@en;
    skos:prefLabel 'the bounds element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:Element
    a owl:Class;
    xml:tag 'element';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The Element element'@en;
    skos:prefLabel 'the Element element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:Elements
    a owl:Class;
    xml:tag 'elements';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The Elements element'@en;
    skos:prefLabel 'the Elements element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:Folder
    a owl:Class;
    xml:tag 'folder';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The folder element'@en;
    skos:prefLabel 'the folder element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:Metadata
    a owl:Class;
    xml:tag 'metadata';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The metadata element'@en;
    skos:prefLabel 'the metadata element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:Name
    a owl:Class;
    xml:tag 'name';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The name element'@en;
    skos:prefLabel 'the name element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:Node
    a owl:Class;
    xml:tag 'node';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The node element'@en;
    skos:prefLabel 'the node element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:Relationships
    a owl:Class;
    xml:tag 'relationships';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The relationships element'@en;
    skos:prefLabel 'the relationships element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:Schema
    a owl:Class;
    xml:tag 'schema';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The schema element'@en;
    skos:prefLabel 'the schema element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:SchemaVersion
    a owl:Class;
    xml:tag 'schemaversion';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The schema version element'@en;
    skos:prefLabel 'the schema version element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:SourceConnection
    a owl:Class;
    xml:tag 'sourceConnection';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The source connection element'@en;
    skos:prefLabel 'the source connection element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:Connection
    a owl:Class;
    xml:tag 'connection';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The connection element'@en;
    skos:prefLabel 'the connection element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:Diagrams
    a owl:Class;
    xml:tag 'diagrams';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The diagrams element'@en;
    skos:prefLabel 'the diagrams element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:View
    a owl:Class;
    xml:tag 'view';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The view element'@en;
    skos:prefLabel 'the view element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:Views
    a owl:Class;
    xml:tag 'views';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The views element'@en;
    skos:prefLabel 'the views element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:Organizations
    a owl:Class;
    xml:tag 'organizations';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The organizations element'@en;
    skos:prefLabel 'the organizations element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:Label
    a owl:Class;
    xml:tag 'label';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The label element'@en;
    skos:prefLabel 'the label element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:Item
    a owl:Class;
    xml:tag 'item';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The item element'@en;
    skos:prefLabel 'the item element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:Style
    a owl:Class;
    xml:tag 'style';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The style element'@en;
    skos:prefLabel 'the style element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:Color
    a owl:Class;
    xml:tag 'color';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The color element'@en;
    skos:prefLabel 'the color element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:LineColor
    a owl:Class;
    xml:tag 'linecolor';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The linecolor element'@en;
    skos:prefLabel 'the linecolor element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:FillColor
    a owl:Class;
    xml:tag 'fillcolor';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The fillcolor element'@en;
    skos:prefLabel 'the fillcolor element'@en;
    rdfs:isDefinedBy archimate:.

  archimate:Font
    a owl:Class;
    xml:tag 'font';
    rdfs:subClassOf archimate:DomElement;
    skos:definition 'The font element'@en;
    skos:prefLabel 'the font element'@en;
    rdfs:isDefinedBy archimate:.

### Archimate attributes

  archimate:id
    a owl:DatatypeProperty;
    xml:key 'id';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the id attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:type
    a owl:DatatypeProperty;
    xml:key 'type';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the type attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:version
    a owl:DatatypeProperty;
    xml:key 'version';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the version attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:identifier
    a owl:DatatypeProperty;
    xml:key 'identifier';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the identifier attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:identifierRef
    a owl:DatatypeProperty;
    xml:key 'identifierRef';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the identifierRef attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:relationshipRef
    a owl:DatatypeProperty;
    xml:key 'relationshipRef';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the relationshipRef attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:elementRef
    a owl:DatatypeProperty;
    xml:key 'elementRef';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the elementRef attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:archimateElement
    a owl:DatatypeProperty;
    xml:key 'archimateElement';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the archimateElement attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:a
    a owl:DatatypeProperty;
    xml:key 'a';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the a attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:b
    a owl:DatatypeProperty;
    xml:key 'b';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the b attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:g
    a owl:DatatypeProperty;
    xml:key 'g';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the g attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:h
    a owl:DatatypeProperty;
    xml:key 'h';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the h attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:name
    a owl:DatatypeProperty;
    xml:key 'name';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the name attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:r
    a owl:DatatypeProperty;
    xml:key 'r';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the r attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:size
    a owl:DatatypeProperty;
    xml:key 'size';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the size attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:source
    a owl:DatatypeProperty;
    xml:key 'source';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the source attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:target
    a owl:DatatypeProperty;
    xml:key 'target';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the target attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:w
    a owl:DatatypeProperty;
    xml:key 'w';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the w attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:y
    a owl:DatatypeProperty;
    xml:key 'y';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the y attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:x
    a owl:DatatypeProperty;
    xml:key 'x';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the x attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:width
    a owl:DatatypeProperty;
    xml:key 'width';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the width attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:height
    a owl:DatatypeProperty;
    xml:key 'height';
    rdfs:domain xml:DomElement;
    rdfs:range xsd:string;
    rdfs:subPropertyOf xml:attribute;
    skos:prefLabel 'the height attribute'@en;
    rdfs:isDefinedBy archimate:.

  archimate:fragment
    a owl:DatatypeProperty;
    rdfs:domain dom:Element;
    rdfs:range rdf:XML;
    skos:definition 'Property that links the xml fragment that is represented by an element within a XML-based archimate document to that element.'@en;
    skos:prefLabel 'fragment property'@en;
    rdfs:isDefinedBy archimate:.

### SVG Document

  archimate:Document
    a owl:Class;
    owl:equivalentClass archimate:documentRestriction;
    dct:conformsTo archimate:;
    skos:definition 'An archimate document consists of a tree of elements and text. Each element is denoted in the source by a start tag, such as â<circle>â, and an end tag, such as â</circle>â. Tags have to be nested such that elements are all completely within each other, without overlapping. Elements can have attributes, which control how the elements work. The Archimate Core Vocabulary defines a set of elements that can be used in an archimate document, along with rules about the ways in which the elements can be nested. Archimate user agents (e.g., web browsers) parse an archimate document, turning it into a DOM (Document Object Model) tree. A DOM tree is an in-memory representation of a document.'@en;
    skos:prefLabel 'archimate document'@en;
    rdfs:isDefinedBy archimate:.

  archimate:documentRestriction
    a owl:Restriction;
    owl:hasValue documentType:archimate;
    owl:onProperty dom:documentType;
    skos:prefLabel 'archimate document type restriction'@en;
    rdfs:isDefinedBy archimate:.
